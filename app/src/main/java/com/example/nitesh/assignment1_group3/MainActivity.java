package com.example.nitesh.assignment1_group3;

import android.content.Intent;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.os.Environment;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import android.widget.Toast;

import java.util.Random;


public class MainActivity extends AppCompatActivity {
    public static GraphView graphView;
    @Override
    protected void onCreate(Bundle savedInstanceState) {

        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        String path = Environment.getExternalStorageDirectory().getPath();
        String dataBase=path+"/assignment1_group3"; //+"/Android/Data/CSE535_ASSIGNMENT2/"+
        final MyDataBase db=new MyDataBase(MainActivity.this,dataBase);
        db.createDataBase();
        //Creating objects of all the UI elements which are required
        final Button btnRunObj = (Button)findViewById(R.id.btnRun);
        final Button btnStopObj = (Button)findViewById(R.id.btnStop);

        final Button btnUploadObj=(Button)findViewById(R.id.Upload);

        final RadioButton rdbMaleObj = (RadioButton)findViewById(R.id.radioButton7);
        final RadioButton rdbFemaleObj = (RadioButton)findViewById(R.id.radioButton8);

        final TextView patName =(TextView)findViewById(R.id.txtPatName);
        final TextView patId = (TextView) findViewById(R.id.txtPatID);
        final TextView patAge = (TextView) findViewById(R.id.txtAge);

        //This GraphLayout is the area where the graph will be added
        final ViewGroup graphLayout = (ViewGroup)findViewById(R.id.GraphLyout);

        //Array to store the values generated by random function initially it will not hold any value
        final float arr[] = new float[50];
        // Markings on the vertical axis stored in left to right descending order to display correctly the Y-Axis
        final String VAxis[] = {"1.00","0.75","0.5","0.25","0"};
        //Markings on the horizontal axis srored in left to right in ascending order to display correctly the X-Axis
        final String XAxis[] = {"0","0.25","0.5","0.75","1.00"};

        //Initializing the graph view with the initial parameters
        MainActivity.graphView = new GraphView(MainActivity.this,arr,"Patient Health Monitor",XAxis,VAxis,true);
        graphView.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,ViewGroup.LayoutParams.WRAP_CONTENT));
        graphView.setBackgroundColor(Color.BLACK);
        //Adding the graphView to the graph layout
        graphLayout.addView(graphView);
        //Disabling the stop button initially to avoid crashes
        btnStopObj.setEnabled(false);



        btnUploadObj.setOnClickListener(new Button.OnClickListener(){
            @Override
            public void onClick(View v)
            {

                if(patName.getText().length() == 0  || patId.getText().length() == 0 || patAge.getText().length() == 0)
                {
                    // Generate a toast with text Enter All Details if any detail is left out and then return i.e. do not plot graph

                    Toast.makeText(getApplicationContext(), "Enter All Details", Toast.LENGTH_LONG).show();
                    return;
                }
                else
                {
                    String sex = "";
                    if(rdbMaleObj.isEnabled()) {
                        sex = "Male";
                    }
                    else
                        sex = "Female";

                    String TABLE_NAME=patName.getText()+"_"+patId.getText()+"_"+patAge.getText()+"_"+ sex;
                    db.createTable(TABLE_NAME);


                }
            }
        });


        //Creating an OnListener event for run button to handle the Run Button click event
        btnRunObj.setOnClickListener(new Button.OnClickListener() {
            @Override
            public void onClick(View v)
            {
                //Check for empty information
                if(patName.getText().length() == 0  || patId.getText().length() == 0 || patAge.getText().length() == 0)
                {
                    // Generate a toast with text Enter All Details if any detail is left out and then return i.e. do not plot graph
                    Toast.makeText(getApplicationContext(), "Enter All Details", Toast.LENGTH_LONG).show();
                    return;
                }
                //Else condition if all the information is provided proceed for drawing graph
                else
                {
                    //Generate Random num and keep storing them into the arr to be passed to graphview constructor
                    Random rd = new Random();
                    for (int i = 0; i < 50; i++) {
                        arr[i] = rd.nextFloat();
                    }
                    //Drawing the graph passing all the parameter arr now contains random values generated
                    MainActivity.graphView = new GraphView(MainActivity.this, arr, "Patient Health Monitor", XAxis, VAxis, true);
                    graphView.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                    graphView.setBackgroundColor(Color.BLACK);
                    //Adding the graph view to the graph layout
                    graphLayout.addView(graphView);
                    //Disabling the Run Button after pressing once to avoid crashes
                    btnRunObj.setEnabled(false);
                    //Enabling the stop after the run is pressed
                    btnStopObj.setEnabled(true);
                }
            }
        });
        //OnCLick listener event for handling stop button click events
        btnStopObj.setOnClickListener(new Button.OnClickListener(){
            @Override
            public void onClick(View v)
            {
                //Remove the view fom layout
                graphLayout.removeView(graphView);
                //Enabling the run button for next click
                btnRunObj.setEnabled(true);
                //Disabling the stop button to avoid crashes
                btnStopObj.setEnabled(false);
            }
        });
    }
}
